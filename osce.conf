upstream tomcat{
	server 127.0.0.1:8080;
    }
upstream php{
        server 127.0.0.1:9000;
    }
#  server {
#        listen       80;
#        server_name  bbs.sunwenju.com;
#        location / {
#          rewrite ^ https:/$http_host$request_uri? permanent; #所有的http访问自动跳转到https访问
#	}
#  }
server {
    #listen       443 default ssl;
    listen       80;
    #server_name  bbs.sunwenju.com;
    server_name  localhost;
    #ssl_certificate /usr/local/openresty/nginx/conf/ssl/bbs.sunwenju.com.pem;
    #ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/bbs.sunwenju.com-key.pem;
    access_log  logs/osce.access.log  main;
   location / {
           root     html;
           #proxy_pass https://www.wenjusir.cn/wordpress/index.php; #当直接访问域名的时候跳转到wordpress/index.php页面
            index  index.html index.htm index.php;
            proxy_redirect             off; 
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
           proxy_set_header           Host $host; 
           proxy_set_header           X-Real-IP $remote_addr; 
           proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for; 
           proxy_set_header X-Forwarded-Proto $scheme;
           client_max_body_size       10m; #允许客户端请求的最大单文件字节数
           client_body_buffer_size    128k; #缓冲区代理缓冲用户端请求的最大字节数
           proxy_connect_timeout      300; #nginx跟后端服务器连接超时时间(代理连接超时)
           proxy_send_timeout         300; #后端服务器数据回传时间(代理发送超时)
           proxy_read_timeout         300; #连接成功后，后端服务器响应时间(代理接收超时)
           proxy_buffer_size          4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
           proxy_buffers              4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_busy_buffers_size    64k; #高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
              }

     location ~ .*\.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma|js|css|ico|eot|svg|ttf|woff)?$ {
          root    html;
          expires 15d; 
          index index.html index.htm;
       }
                #整合php
                location ~ \.php(.*)$ {
                   root        html;
                   fastcgi_pass   127.0.0.1:9000;
                   fastcgi_index  index.php;
                   fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
                   fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
                   fastcgi_param  PATH_INFO  $fastcgi_path_info;
                   fastcgi_param  PATH_TRANSLATED  
                   $document_root$fastcgi_path_info;
                   include        fastcgi_params;
        }
	#整合tomcat
	location /toomcat {
            proxy_pass http://tomcat;
             proxy_redirect             off;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
           proxy_set_header           Host $host;
           proxy_set_header           X-Real-IP $remote_addr;
           proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           client_max_body_size       10m; #允许客户端请求的最大单文件字节数
           client_body_buffer_size    128k; #缓冲区代理缓冲用户端请求的最大字节数
           proxy_connect_timeout      300; #nginx跟后端服务器连接超时时间(代理连接超时)
           proxy_send_timeout         300; #后端服务器数据回传时间(代理发送超时)
           proxy_read_timeout         300; #连接成功后，后端服务器响应时间(代理接收超时)
           proxy_buffer_size          4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
           proxy_buffers              4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_busy_buffers_size    64k; #高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
	}
	#开启nginx下载功能
     location ~ /downloads {
                root html;
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
        }
	#开启nginx监控
      location /nginx_stat {
		stub_status on; # Turn on nginx stats
		access_log off; # We do not need logs for stats
		#allow 0.0.0.0; # Security: Only allow access from IP
		#allow ::1; # Security IPv6: allow only from localhost
		#deny all; # Deny requests from the other of the world
	}
   }  

